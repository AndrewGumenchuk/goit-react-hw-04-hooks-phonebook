{"version":3,"sources":["components/Contact/ContactsFile.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactsFile","contacts","onDeleteContact","map","id","name","number","className","onClick","ContactForm","onSubmit","useState","setName","setNumber","handleChange","target","value","reset","event","preventDefault","type","placeholder","onChange","disabled","Filter","onChangle","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","find","contact","alert","newContacts","uniqueId","prevState","length","normalized","toLowerCase","trim","includes","visibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1397d930.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './ContactsFile.css';\r\n\r\nfunction ContactsFile({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className=\"item_contact\">\r\n          <p className=\"item_text\">{name}</p>\r\n          <p className=\"item_text\">{number}</p>\r\n          <button className=\"item__buttom\" onClick={() => onDeleteContact(id)}>\r\n            delete\r\n        </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n  ContactsFile.propTypes = {\r\n    contacts: PropTypes.arrayOf(PropTypes.object),\r\n  };\r\n  export default ContactsFile;","import { useState } from 'react';\r\nimport './ContactForm.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n   const handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    onSubmit(name, number);\r\n    reset();\r\n  };\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n    return (\r\n      <form className=\"item_form\" onSubmit={handleSubmit}>\r\n        <label>\r\n          Ім’я\r\n          <input\r\n            className=\"item_input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Annie Copeland\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n         Phone\r\n          <input\r\n            className=\"item_input\"\r\n            type=\"text\"\r\n            name=\"number\"\r\n            placeholder=\"111-11-11\"\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={name === '' || number === ''}>\r\n          Save contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n\r\nexport default ContactForm;\r\n","import './Filter.css';\r\nconst Filter = ({ value, onChangle }) => (\r\n  <label className=\"item_filter\">\r\n    <p className=\"item_text-filter\">Contacts search</p>\r\n    <input\r\n      className=\"item_element\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChangle}\r\n    />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\r\nimport ContactsFile from './components/Contact/';\r\nimport { v4 as uniqueId } from 'uuid';\r\nimport ContactForm from './components/ContactForm/';\r\nimport Filter from './components/Filter/';\r\nimport './App.css';\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n  const [state, setState] = useState(\r\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n};\r\n\r\nfunction App() {\r\n  const [contacts, setContacts] = useLocalStorage('contacts', []);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContact = (name, number) => {\r\n    if (contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      return;\r\n    };\r\n     const newContacts = {\r\n      id: uniqueId(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    setContacts(prevState => [newContacts, ...prevState]);\r\n  };\r\n  const deleteContact = contactId => {\r\n    setContacts(contacts.filter(contact => contact.id !== contactId));\r\n  };\r\n  const changeFilter = ({ target }) => {\r\n    setFilter(target.value);\r\n  };\r\n  const visibleContacts = () => {\r\n    const normalized = filter.toLowerCase().trim();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalized),\r\n    );\r\n  };\r\n\r\n    return (\r\n      <div className=\"Container\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChangle={changeFilter} />\r\n        {!contacts.length && <div>No contacts! Please add someone!</div>}\r\n        <ContactsFile\r\n          contacts={visibleContacts()}\r\n          onDeleteContact={deleteContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}